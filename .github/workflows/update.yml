name: Update JSON Files

on:
  workflow_dispatch: # Manual trigger
  schedule:
    - cron: "0 6 * * *" # every day at 06:00 UTC (optional, adjust/remove)

jobs:
  update-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for checking last commit

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true

      - name: Run update script
        id: run_script
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          set -o pipefail
          python scripts/update_json.py 2>&1 | tee script.log

      - name: Check for relevant changes
        run: |
          git add .
          # Collect changed files excluding latest_report.json and report.json
          CHANGED_FILES=$(git status --porcelain | awk '{print $2}' | grep -E '\.(json|gz)$' | grep -v -E '(^|/)(latest_report\.json|report\.json)$' || true)

          if [[ -n "$CHANGED_FILES" ]]; then
            echo "CHANGED=true" >> $GITHUB_ENV
            # collapse into single line space-separated
            FILES_ONE_LINE=$(echo $CHANGED_FILES | xargs)
            echo "FILES=$FILES_ONE_LINE" >> $GITHUB_ENV
          else
            echo "CHANGED=false" >> $GITHUB_ENV
          fi

      - name: Commit and push changes
        if: env.CHANGED == 'true'
        run: |
          git config user.name "preservator[bot]"
          git config user.email "preservator[bot]@users.noreply.github.com"

          git add $FILES
          git commit --author="${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>" -m "Update JSON files: $FILES" 
          git push origin HEAD:${GITHUB_REF}

      - name: Send logs and report to Discord
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            STATUS="✅ Success"
          else
            STATUS="❌ Failure"
          fi

          curl -X POST \
            -F "payload_json={\"content\": \"Workflow finished with status: $STATUS\"}" \
            -F "file1=@script.log" \
            -F "file2=@json/latest_report.json" \
            ${{ secrets.DISCORD_WEBHOOK }}
