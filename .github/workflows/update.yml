name: Update JSON Files

on:
  workflow_dispatch: # Manual trigger
  schedule:
    - cron: "0 6 * * *" # every day at 06:00 UTC (optional, adjust/remove)

jobs:
  update-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for checking last commit

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true

      - name: Run update script
        id: run_script
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          set -o pipefail
          python scripts/update_json.py 2>&1 | tee script.log

      - name: Check for changes
        id: git_status
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.git_status.outputs.changed == 'true'
        run: |
          git config user.name "json-bot"
          git config user.email "json-bot@users.noreply.github.com"
          
          # Get all changed JSON or GZ files
          ALL_FILES=$(git status --porcelain | awk '{print $2}' | grep -E '\.(json|gz)$' || true)

          # Get relevant files for commit message (exclude latest.json and reports.json)
          FILES_FOR_MSG=$(echo "$ALL_FILES" | grep -v 'latest.json' | grep -v 'reports.json' || true)
          
          if [ -n "$ALL_FILES" ]; then
            git add $ALL_FILES
            git commit -m "Update JSON files: $FILES_FOR_MSG"
            git push origin HEAD:${GITHUB_REF}
          else
            echo "No relevant JSON files to commit."
          fi

      - name: Send logs to Discord
        if: always()
        run: |
          LOG_CONTENT=$(sed 's/"/\\"/g' script.log | sed 's/$/\\n/' | tr -d '\n')
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\": \"\`\`\`$LOG_CONTENT\`\`\`\"}" \
               ${{ secrets.DISCORD_WEBHOOK }}
